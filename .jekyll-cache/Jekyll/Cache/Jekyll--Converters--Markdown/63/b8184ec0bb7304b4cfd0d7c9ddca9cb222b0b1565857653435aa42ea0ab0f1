I"ò<p>The last months I have been working in a new side project just for fun:
<strong><a href="https://github.com/davidarias/Jupiter">Jupiter</a></strong>, a programming language based on Smalltalk. It features a simple
bytecode interpreter virtual machine with a mark&amp;sweep garbage collector. Nothing fancy there,
but I added some features to the language that I think are worth exploring:</p>

<ul>
  <li>A set of simple core types: Numbers ( Just one type of numbers ),
Strings, Arrays ( number indexed collections ) and Maps ( String indexed collections ).</li>
  <li>Immutable data structures.</li>
  <li>There are no classes. Objects are created copying other objects ( prototypes ). Thanks to immutability no special semantics is needed to achieve this.</li>
  <li>Code reuse through composition instead of inheritance. Deep hierarchies often are a source of incidental complexity.</li>
  <li>Unix friendly: Its source code is stored in files, which is not the â€˜Smalltalk wayâ€™, but this allow easy interaction with other Unix tools, like git, grep, IDEâ€™s/text editors etc..</li>
</ul>

<p>In my opinion Smalltalk and its cousin <a href="http://www.selflanguage.org/">Self</a> are very interesting
programming languages. Seems that nowadays are relegated to niche languages, due to reasons beyond the scope of this article (although <a href="https://pharo.org/">Pharo</a>
has a quite active community), nevertheless, I think we can still learn a lot from this â€˜oldâ€™ technologies.</p>

<p>Contributions are very much welcome. Just open a pull request or an issue in Github :)</p>

<p><strong>Edit 2018-05-18:</strong> Check out the brand new <a href="https://github.com/davidarias/juno">Juno IDE</a>,
a Smalltalk-like IDE for the Jupiter Programing Language</p>
:ET